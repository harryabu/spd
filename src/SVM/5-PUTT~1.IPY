{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this notebook, we attempt to put the SCI and VFP together to identify authors in conversations who are predators. THe input will be a conversation, and the output is whether or not the conversation is suspicious, and if so, who is the predator(s)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def get_features_labels(root):\n",
    "    corpus = [] # each row is a string formed from all messages in a conversations\n",
    "\n",
    "    for conversation in root:\n",
    "        string = \" \"\n",
    "        for message in conversation:\n",
    "            text = message.find('text').text\n",
    "            if text is not None:\n",
    "                string = string + \"\\r\\n\" + text \n",
    "        corpus.append(string)]\n",
    "    return corpus, labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "SCI_filename = \"../../models/SCI_SVM_0.99_2019_03_07_14_15_45.sav\"\n",
    "VFP_filename = \"../../models/VFP_SVM_0.85_2019_03_07_12_25_50.sav\"\n",
    "SCI_model = pickle.load(open(SCI_filename, 'rb'))\n",
    "VFP_model = pickle.load(open(VFP_filename, 'rb'))\n",
    "\n",
    "result = loaded_model.score(X_test, Y_test)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
